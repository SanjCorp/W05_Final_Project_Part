{
  "openapi": "3.0.0",
  "info": {
    "title": "3D Print API",
    "version": "1.0.0",
    "description": "API documentation for W05 Final Project Part"
  },
  "servers": [
    {
      "url": "https://w05-final-project-part.onrender.com",
      "description": "Render deployment"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/api/products": {
      "get": {
        "summary": "Get all products",
        "responses": {
          "200": { "description": "List of products" },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Create a new product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Product" },
              "example": {
                "name": "Example Product",
                "description": "Description of product",
                "price": 10.5,
                "category": "3D Materials",
                "inStock": true
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Product created" },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/products/{id}": {
      "put": {
        "summary": "Update a product",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Product" } } }
        },
        "responses": {
          "200": { "description": "Product updated" },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Product not found" }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Product deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Product not found" }
        }
      }
    },
    "/api/orders": {
      "get": {
        "summary": "Get all orders",
        "responses": {
          "200": { "description": "List of orders" },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Create a new order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Order" },
              "example": {
                "productId": "123456",
                "quantity": 2,
                "customerName": "John Doe",
                "customerEmail": "john@example.com",
                "status": "pending"
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Order created" },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/orders/{id}": {
      "put": {
        "summary": "Update an order",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Order" } } } },
        "responses": {
          "200": { "description": "Order updated" },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Order not found" }
        }
      },
      "delete": {
        "summary": "Delete an order",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Order deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Order not found" }
        }
      }
    },
    "/api/customers": {
      "get": {
        "summary": "Get all customers",
        "responses": {
          "200": { "description": "List of customers" },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Create a new customer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Customer" },
              "example": {
                "name": "Jane Doe",
                "email": "jane@example.com",
                "phone": "555-1234"
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Customer created" },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/customers/{id}": {
      "put": {
        "summary": "Update a customer",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Customer" } } } },
        "responses": {
          "200": { "description": "Customer updated" },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Customer not found" }
        }
      },
      "delete": {
        "summary": "Delete a customer",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Customer deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Customer not found" }
        }
      }
    },
    "/api/suppliers": {
      "get": {
        "summary": "Get all suppliers",
        "responses": {
          "200": { "description": "List of suppliers" },
          "401": { "description": "Unauthorized" }
        }
      },
      "post": {
        "summary": "Create a new supplier",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Supplier" },
              "example": {
                "name": "Supplier Inc.",
                "email": "supplier@example.com",
                "phone": "555-5678"
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Supplier created" },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/suppliers/{id}": {
      "put": {
        "summary": "Update a supplier",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Supplier" } } } },
        "responses": {
          "200": { "description": "Supplier updated" },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Supplier not found" }
        }
      },
      "delete": {
        "summary": "Delete a supplier",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Supplier deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Supplier not found" }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Cerrar sesión del usuario",
        "description": "Cierra la sesión del usuario y destruye la cookie de sesión.",
        "responses": {
          "200": {
            "description": "Sesión cerrada correctamente",
            "content": {
              "application/json": {
                "example": { "message": "Sesión cerrada correctamente." }
              }
            }
          },
          "500": {
            "description": "Error al cerrar sesión",
            "content": {
              "application/json": {
                "example": { "message": "Internal Server Error" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "number" },
          "category": { "type": "string" },
          "inStock": { "type": "boolean" }
        },
        "required": ["name", "price", "category"]
      },
      "Order": {
        "type": "object",
        "properties": {
          "productId": { "type": "string" },
          "quantity": { "type": "number" },
          "customerName": { "type": "string" },
          "customerEmail": { "type": "string" },
          "status": { "type": "string" }
        },
        "required": ["productId", "quantity", "customerName", "customerEmail"]
      },
      "Customer": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "phone": { "type": "string" }
        },
        "required": ["name", "email"]
      },
      "Supplier": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "phone": { "type": "string" }
        },
        "required": ["name", "email"]
      }
    }
  }
}
